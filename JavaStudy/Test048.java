/*===================================================================
	■■■ 실행 흐름의 컨트롤(제어문) ■■■
		- 5장-03. 
			- 반복문(while문) 실습
===================================================================*/

/*
	1부터 100까지의 정수의 합을 구하되...
	10의 배수가 될 때 마다...
	결과를 출력하는 프로그램을 구현한다.
	
	실행 예)
	1 ~ 10 까지의 합 : xx
	1 ~ 20 까지의 합 : xxx
	1 ~ 30 까지의 합 : xxx
	
	1 ~ 100 까지의 합 : xxx
	계속하려면 아무 키나 누르세요...
*/

public class Test048
{
	public static void main(String[] args)
	{
		/*
		// 변수 선언 및 초기화
		int nFinalNum = 100;
		int nNum = 0, nSum = 0;
		
		// 정수의 누적합 계산
		while (nNum < nFinalNum)
		{
			nNum += 1;
			
			nSum += nNum;
			
			if (nNum % 10 == 0)
			{
				// 10의 배수
				System.out.printf("1 ~ %d 까지의 합 : %d\n", nNum, nSum); 
			}
		}
		
		*/
		
		int n = 1, sum = 0;		//-- n   → 1부터 1씩 증가할 변수
								//-- sum → 누적합을 담아낼 변수
		
		while (n <= 100)		//-- n → 1 2 3 ... 100 → 100번 반복
		{
			// 테스트(확인)
			//System.out.println("n=" + n + ", sum=" + sum);
			
			sum += n;		//-- sum을 n만큼씩 증가
			
			// 테스트(확인)
			//System.out.println("n=" + n + ", sum=" + sum);
			
			if (n%10 == 0)	//-- n이 10의 배수일 경우
			{
				// 출력
				//System.out.println("n=" + n);
				//System.out.println("sum=" + sum);
				System.out.printf("1 ~ %d까지의 합 : %d\n", n, sum);
			}
			
			n++;			//-- n을 1만큼씩 증가
		}
	}
}

//-- 실행결과
// 1 ~ 10 까지의 합 : 55
// 1 ~ 20 까지의 합 : 210
// 1 ~ 30 까지의 합 : 465
// 1 ~ 40 까지의 합 : 820
// 1 ~ 50 까지의 합 : 1275
// 1 ~ 60 까지의 합 : 1830
// 1 ~ 70 까지의 합 : 2485
// 1 ~ 80 까지의 합 : 3240
// 1 ~ 90 까지의 합 : 4095
// 1 ~ 100 까지의 합 : 5050
// 계속하려면 아무 키나 누르십시오 . . .