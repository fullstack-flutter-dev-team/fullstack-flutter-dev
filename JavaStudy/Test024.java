/*===================================================================
	■■■ 연산자(Operator) ■■■
		- 비트 단위 연산자 : 연산 속도가 빠른 장점
===================================================================*/


public class Test024
{
	public static void main(String[] args)
	{
		// 변수 선언 및 초기화
		int x = 128;		// 0000000 0000000 0000000 10000000
		
		// 출력
		System.out.printf("x << 3 : %d\n", x << 3);
		// 0000000 0000000 0000000 10000000
		//				↓
		// 0000000 0000000 0000100 00000000
		//-- 결과 출력
		// x << 3 : 1024

		System.out.printf("x >> 3 : %d\n", x >> 3);
		// 0000000 0000000 0000000 10000000
		//				↓
		// 0000000 0000000 0000000 00010000
		//-- 결과 출력
		//x >> 3 : 16
		
		// 검산 출력
		System.out.printf(" x * 8 : %d \n", x * 8);
		System.out.printf(" x / 8 : %d \n", x / 8);
		//--결과 출력
		//x * 8 : 1024 
		//x / 8 : 16 
		
		System.out.println("---------------------------");
		System.out.printf("x << 24 : %d\n", x << 24);
		// 0000000 0000000 0000000 10000000
		//				↓
		// 1000000 0000000 0000000 00000000
		//--==> x << 24 : -2147483648
		
		/*
			1000000 0000000 0000000 00000000
			
			1000000 0000000 0000000 00000000
		
		
		*/
		
		System.out.printf("x << 24 : %d\n", x << 24);
		// 1000000 0000000 0000000 00000000		
		//--==> x << 24 : -2147483648
		
		System.out.printf("x << 25 : %d\n", x << 25);
		// 0000000 0000000 0000000 00000001		
		//--==> x << 25 : 0
		
		System.out.printf("x << 26 : %d\n", x << 26);
		// 0000000 0000000 0000000 00000010		
		//--==> x << 26 : 0
		
		System.out.printf("x << 27 : %d\n", x << 27);
		// 0000000 0000000 0000000 00000100		
		//--==> x << 27 : 0
		
		System.out.printf("x << 32 : %d\n", x << 32);
		// 0000000 0000000 0000000 10000000
		//--==> x << 32 : 128		
	}
}