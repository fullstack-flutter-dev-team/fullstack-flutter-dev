/*===================================================================
	■■■ 실행 흐름의 컨트롤(제어문) ■■■
		- 5장-03. 
			- continue 실습
===================================================================*/

/*
	※ continue 키워드가 지니는 의미
		→ 	(뒷부분 무시하고 +) 계속해라
		
	continue를 활용하여
	다음과 같이 출력될 수 있도록 프로그램을 구현한다.
	
	실행 예)
	1 : 1
	3 : 4
	5 : 9
	7 : 16
	   ⁝
	99 : 2500
	계속하려면 아무 키나 누르세요...
*/

public class Test070
{
	public static void main(String[] args)
	{
		/*
		// 변수 선언 및 초기화
		int nIdx, nSum = 0;
		
		// 연산 처리
		for (nIdx = 1; nIdx < 100; nIdx++)
		{
			if (nIdx % 2 == 0)
			{
				continue;
			}
			
			// 홀수 누적합 
			nSum += nIdx;
			
			// 누적합 출력
			System.out.printf("%2d : %4d\n", nIdx, nSum);	
		}
		//--실행결과
		//   1 :    1
		//   3 :    4
		//   5 :    9
		//   7 :   16
		//		⁝
		//  97 : 2401
		//  99 : 2500
		//  계속하려면 아무 키나 누르십시오 . . .		
		
		*/
		
		int n=0, s = 0;
		
		while (n<100)
		{
			n++;								//-- 앞부분
			
			if (n%2 == 0)						//-- n이 짜수라면...
			{
				continue;						//-- 뒷부분 무시하고... 계속해라
			}
			
			//  누적합
			s += n;								//
												//
			// 누적합 결과 출력					//   뒷부분
			System.out.println( n + " : " + s);	//
		}
		
	}//end main
	
}//Test070

//실행 결과
//1 : 1
//3 : 4
//5 : 9
//7 : 16
//9 : 25
//11 : 36
//13 : 49
//15 : 64
//17 : 81
//19 : 100
//21 : 121
//23 : 144
//25 : 169
//27 : 196
//29 : 225
//31 : 256
//33 : 289
//35 : 324
//37 : 361
//39 : 400
//41 : 441
//43 : 484
//45 : 529
//47 : 576
//49 : 625
//51 : 676
//53 : 729
//55 : 784
//57 : 841
//59 : 900
//61 : 961
//63 : 1024
//65 : 1089
//67 : 1156
//69 : 1225
//71 : 1296
//73 : 1369
//75 : 1444
//77 : 1521
//79 : 1600
//81 : 1681
//83 : 1764
//85 : 1849
//87 : 1936
//89 : 2025
//91 : 2116
//93 : 2209
//95 : 2304
//97 : 2401
//99 : 2500
//계속하려면 아무 키나 누르십시오 . . .