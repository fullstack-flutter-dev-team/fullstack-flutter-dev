/*===================================================================
	■■■ 클래스와 인스턴스 ■■■
	- 클래스와 인스턴스 활용
	-  static 변수(클래스 변수)와 static 메서드(클래스 메서드)
	   ------------------------   ----------------------------
	        정적 변수                      정적 메서드     
===================================================================*/
// ※ ○ ★ 『』 ⬛ ▣ ① ② ③ ④   →  ←  ↓ ↑  …  ：  /*  */  ─ ┃ ┛

/* 
	
*/


/* 
    학생별로 국어,영어, 수학점수를 입력받아
	총점, 평균을 계산하는 프로그램을 구현한다.
	단, 클래스와 인스턴스의 개념을 활용하여 작성할 수 있도록 한다.
	또한, 이 과정에서 배열을 적극적으로 활용할 수 있도록 한다.
	클래스의 설계는 다음의 가이드라인에 따라 진행할 수 있도록 한다.
	
	[가이드 라인]
	프로그램을 구성하는 클래스
	1.Record클래스
	  - 속성만 존재하는 클래스로 설계할 것~!!! -----------------check~!!!
	2.Sungjuk 클래스
	  - 인원 수를 입력받아
	    그 인원 수 만큼 이름, 국어, 영어, 수학 점수를 입력받고
	    총점과 평균을 산출하는 클래스로 설계할 것~!!!
	     - 속성 : 인원 수, ★ Record타입의 배열 -------------------check~!!!
		 - 기능 : 인원 수 입력, 상세 데이터 입력, 총점 및 평균 연산, 결과 출력
	3. Test105 클래스
	   - main() 메서드가 존재하는 외부 클래스로 설계할 것~!!!
	   
	   
	실행 예)
	인원 수 입력(1~100) : 102
	인원 수 입력(1~100) : -2
	인원 수 입력(1~100) : 3
	
	1번째 학생의 이름 입력 : 이동건
	국어 점수 : 90
	영어 점수 : 80
	수학 점수 : 70
	2번째 학생의 이름 입력 : 유한
	국어 점수 : 90
	영어 점수 : 90
	수학 점수 : 70
	3번째 학생의 이름 입력 : 이채원
	국어 점수 : 90
	영어 점수 : 90
	수학 점수 : 80
	
	이동건 90 80 70 240 xx.xx  3
	유한   90 90 70 250 xx.xx  2
	이채원 90 80 80 260 xx.xx  1
	계속하면 아무 키나 누르세요....
	
*/

/*
 ▣ 힌트:
    
*/

import java.util.Scanner;
import java.util.Random;


// 실습 편의상 접근제어 지시자 생략
public class Test105
{
	public static void main(String[] args)
	{
		// 변수 선언 및 초기화
		Sungjuk ob = new Sungjuk();
		
		// 인원수 입력
		ob.inputCount();
		
		// 상세 데이터 입력 & 총점 및 평균 연산
		ob.inputRecords();
		
		// 등위 계산
		ob.calcRank();
		
		// 결과 출력
		ob.print();
	}
}