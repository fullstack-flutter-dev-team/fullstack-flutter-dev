<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xmlns:p="http://www.springframework.org/schema/p"
xmlns:context="http://www.springframework.org/schema/context"
xsi:schemaLocation="
http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
http://www.springframework.org/schema/context
http://www.springframework.org/schema/context/spring-context-3.0.xsd">
<context:component-scan base-package="org.springframework.samples.petclinic.web"/>

    <!-- 
       - #19. dispatcher-servlet.xml 
          → 컨트롤러 객체 등록
          → URL 매핑 주소 등록
          → SimpleDriverDataSource 객체 등록
          → 의존 객체 주입 설정 
          → DAO 객체 등록
    -->


    <!-- ※ 사용자 정의 Controller 객체 등록 및 URL 매핑 주소 등록 -->
    <!--    - 『name=""』 속성에 매핑 주소를 등록한다. -->
    <!--       이 과정에서 Front Controller 가 갖고있는 확장자의 형태로 구성하게 된다. -->
    <!--    - 『class=""』 속성은 Controller 객체의 클래스 경로 및 이름을 등록하게 된다. -->

    <!-- DataSource 등록 -->
    <!-- → SimpleDriverDataSource -->
    <!-- → localDataSource -->
    <bean id="localDataSource" class="org.springframework.jdbc.datasource.SimpleDriverDataSource">
        <property name="driverClass" value="oracle.jdbc.driver.OracleDriver"></property>
        <property name="url" value="jdbc:oracle:thin:@localhost:1521:xe"></property>
        <property name="username" value="scott"></property>
        <property name="password" value="tiger"></property>
    </bean>
    <!-- → remoteDataSource -->
    <bean id="remoteDataSource" class="org.springframework.jdbc.datasource.SimpleDriverDataSource">
        <property name="driverClass" value="oracle.jdbc.driver.OracleDriver"></property>
        <property name="url" value="jdbc:oracle:thin:@211.238.142.161:1521:xe"></property>
        <property name="username" value="scott"></property>
        <property name="password" value="tiger"></property>
    </bean>
    
    
    <!-- EmployeeDAO 등록 -->
    <bean id="employeeDAO" class="com.test.mvc.EmployeeDAO">
        <property name="dataSource" ref="localDataSource"></property>
    </bean>
    
    <!-- DepartmentDAO 등록 -->
    <bean id="departmentDAO" class="com.test.mvc.DepartmentDAO">
        <property name="dataSource" ref="localDataSource"></property>
    </bean>
    
    <!-- RegionDAO 등록 -->
    <bean id="regionDAO" class="com.test.mvc.RegionDAO">
        <property name="dataSource" ref="localDataSource"></property>
    </bean>
    <!-- PositionDAO 등록 -->
    <bean id="positionDAO" class="com.test.mvc.PositionDAO">
        <property name="dataSource" ref="localDataSource"></property>
    </bean>
    
    <!-- PositionDAO 등록 -->
<!--     <bean id="positionDAO" class="com.test.mvc.PositionDAO"> -->
<!--         <property name="dataSource" ref="localDataSource"></property> -->
<!--     </bean> -->

    <!-- 테스트 용도 -->
    <bean name="/test.action" class="com.test.mvc.TestController">
        <property name="dao" ref="employeeDAO"></property>
    </bean>
    
    <!-- Employee 관련 컨트롤러 등록 -->
    <!-- EmployeeListController 등록 → 직원 리스트 조회 -->
    <bean name="/employeelist.action" class="com.test.mvc.EmployeeListController">
        <property name="employeeDAO" ref="employeeDAO"></property>
    </bean>
    
    <!--  EmpListController 등록 →  -->
    <bean name="/emplist.action" class="com.test.mvc.EmpListController">
        <property name="employeeDAO" ref="employeeDAO"></property>
    </bean>

    <!-- EmployeeInsertFormController 등록 → 직원 등록 -->
    <bean name="/employeeinsertform.action" class="com.test.mvc.EmployeeInsertFormController">
        <property name="employeeDAO" ref="employeeDAO"></property>
    </bean>
    
    <!--  AjaxController 등록 →  -->
    <bean name="/ajax.action" class="com.test.mvc.AjaxController">
        <property name="employeeDAO" ref="employeeDAO"></property>
    </bean>
    
    <!--  EmployeeInsertController 등록 →  -->
    <bean name="/employeeinsert.action" class="com.test.mvc.EmployeeInsertController">
        <property name="employeeDAO" ref="employeeDAO"></property>
    </bean>
    
    <!--  EmployeeUpdateFormController 등록 →  -->
    <bean name="/employeeupdateform.action" class="com.test.mvc.EmployeeUpdateFormController">
        <property name="employeeDAO" ref="employeeDAO"></property>
        <property name="departmentDAO" ref="departmentDAO"></property>
        <property name="regionDAO" ref="regionDAO"></property>
        <property name="positionDAO" ref="positionDAO"></property>
    </bean>

    <!--  EmployeeUpdateController 등록 →  -->
    <bean name="/employeeupdate.action" class="com.test.mvc.EmployeeUpdateController">
        <property name="employeeDAO" ref="employeeDAO"></property>
    </bean>
    
    <!--  EmployeeDeleteController 등록 →  -->
    <bean name="/employeedelete.action" class="com.test.mvc.EmployeeDeleteController">
        <property name="employeeDAO" ref="employeeDAO"></property>
    </bean>

    <!--  LoginFormController 등록 →  -->
    <bean name="/loginform.action" class="com.test.mvc.LoginFormController"></bean>

    <!--  LoginController 등록 →  -->
    <bean name="/login.action" class="com.test.mvc.LoginController">
        <property name="employeeDAO" ref="employeeDAO"></property>
    </bean>
    
    <!--  LogoutController 등록 →  -->
    <bean name="/logout.action" class="com.test.mvc.LogoutController"></bean>
    
    
    <!-- Region 관련 컨트롤러 등록 -->
    <!-- RegionListController 등록 → 지역 리스트 조회 -->
    <bean name="/regionList.action" class="com.test.mvc.RegionListController">
        <property name="regionDAO" ref="regionDAO"></property>
    </bean>

    <!-- RegionInsertFormController 등록 → 지역 등록폼 -->
    <bean name="/regionInsertFrom.action" class="com.test.mvc.RegionInsertFormController">
        <property name="regionDAO" ref="regionDAO"></property>
    </bean>

    <!-- RegionInsertController 등록 → 지역 등록 -->
    <bean name="/regionInsert.action" class="com.test.mvc.RegionInsertController">
        <property name="regionDAO" ref="regionDAO"></property>
    </bean>

    <!-- RegionUpdateFormController 등록 → 지역 변경 조회 -->
    <bean name="/regionUpdateForm.action" class="com.test.mvc.RegionUpdateFormController">
        <property name="regionDAO" ref="regionDAO"></property>
    </bean>

    <!-- RegionUpdateController 등록 → 지역 변경 조회 -->
    <bean name="/regionUpdate.action" class="com.test.mvc.RegionUpdateController">
        <property name="regionDAO" ref="regionDAO"></property>
    </bean>
    <!-- RegionDeleteController 등록 → 지역 삭제 조회 -->
    <bean name="/regionDelete.action" class="com.test.mvc.RegionDeleteController">
        <property name="regionDAO" ref="regionDAO"></property>
    </bean>

    <!-- Department 관련 컨트롤러 등록 -->
    <!-- DepartmentListController 등록 → 부서 리스트 조회 -->
    <bean name="/departList.action" class="com.test.mvc.DepartmentListController">
        <property name="departmentDAO" ref="departmentDAO"></property>
    </bean>

    <!-- DepartmentInsertFormController 등록 → 부서 등록폼 -->
    <bean name="/departInsertForm.action" class="com.test.mvc.DepartmentInsertFormController">
        <property name="departmentDAO" ref="departmentDAO"></property>
    </bean>

    <!-- DepartmentInsertController 등록 → 부서 등록 -->
    <bean name="/departInsert.action" class="com.test.mvc.DepartmentInsertController">
        <property name="departmentDAO" ref="departmentDAO"></property>
    </bean>

    <!-- DepartmentUpdateFormController 등록 → 부서 변경 조회 -->
    <bean name="/departUpdateForm.action" class="com.test.mvc.DepartmentUpdateFormController">
        <property name="departmentDAO" ref="departmentDAO"></property>
    </bean>
    <!-- DepartmentUpdateController 등록 → 부서 변경 조회 -->
    <bean name="/departUpdate.action" class="com.test.mvc.DepartmentUpdateController">
        <property name="departmentDAO" ref="departmentDAO"></property>
    </bean>
    <!-- DepartmentDeleteController 등록 → 부서 삭제 조회 -->
    <bean name="/departDelete.action" class="com.test.mvc.DepartmentDeleteController">
        <property name="departmentDAO" ref="departmentDAO"></property>
    </bean>

    <!-- Position 관련 컨트롤러 등록 -->
     <!-- PositionListController 등록 → 직위 리스트 조회 -->
    <bean name="/positionList.action" class="com.test.mvc.PositionListController">
        <property name="positionDAO" ref="positionDAO"></property>
    </bean>
    <!-- PositionInsertFormController 등록 → 직위 변경폼-->
    <bean name="/positionInsertForm.action" class="com.test.mvc.PositionInsertFormController">
        <property name="positionDAO" ref="positionDAO"></property>
    </bean>
    <!-- PositionInsertController 등록 → 직위 변경폼-->
    <bean name="/positionInsert.action" class="com.test.mvc.PositionInsertController">
        <property name="positionDAO" ref="positionDAO"></property>
    </bean>
    <!-- PositionUpdateFormController 등록 → 직위 변경폼-->
    <bean name="/positionUpdateForm.action" class="com.test.mvc.PositionUpdateFormController">
        <property name="positionDAO" ref="positionDAO"></property>
    </bean>
    <!-- PositionUpdateController 등록 → 직위 변경 -->
    <bean name="/positionUpdate.action" class="com.test.mvc.PositionUpdateController">
        <property name="positionDAO" ref="positionDAO"></property>
    </bean>
    <!-- PositionDeleteController 등록 → 직위 삭제 조회 -->
    <bean name="/positionDelete.action" class="com.test.mvc.PositionDeleteController">
        <property name="positionDAO" ref="positionDAO"></property>
    </bean>

</beans>