SELECT USER FROM DUAL;
/* 
USER
-------
SCOTT
*/


-- 석차 포함 리스트 출력 프로시저
CREATE OR REPLACE PROCEDURE PRC_SCORESELECT
(
    P_RESULT OUT SYS_REFCURSOR
)
IS
BEGIN
    OPEN P_RESULT FOR
        SELECT SID, NAME, KOR, ENG, MAT
        , (KOR+ENG+MAT) AS TOT
        , ROUND((KOR+ENG+MAT)/3) AS AVG
        , RANK() OVER (ORDER BY (KOR+ENG+MAT) DESC) AS RANK
        FROM TBL_SCORE
        ORDER BY SID ASC;
END;

-- 인원수 출력 프로시저
CREATE OR REPLACE PROCEDURE PRC_SCORECOUNT
(
    P_RESULT OUT SYS_REFCURSOR
)
IS
BEGIN
    OPEN P_RESULT FOR
        SELECT COUNT(*) AS COUNT
        FROM TBL_SCORE
        ORDER BY SID ASC;
END;

-- 번호검색 인원수 출력 프로시저
CREATE OR REPLACE PROCEDURE PRC_SCORECOUNTSID
(
    P_RESULT OUT SYS_REFCURSOR
    , VSID IN TBL_SCORE.SID%TYPE
)
IS
BEGIN
    OPEN P_RESULT FOR
        SELECT COUNT(*) AS COUNT
        FROM TBL_SCORE
        WHERE SID=VSID;
END;



-- 이름 검색 출력 프로시저(석차 포함)
-- 매개변수의 순서에 주의할 것
CREATE OR REPLACE PROCEDURE PRC_SEARCHNAME
(
    P_RESULT OUT SYS_REFCURSOR
    , VNAME IN TBL_SCORE.NAME%TYPE
)
IS
BEGIN
    OPEN P_RESULT FOR
        SELECT SID, NAME, KOR, ENG, MAT, TOT, AVG, RANK
        FROM
        (
            SELECT SID, NAME, KOR, ENG, MAT
            , (KOR+ENG+MAT) AS TOT
            , ROUND((KOR+ENG+MAT)/3) AS AVG
            , RANK() OVER (ORDER BY (KOR+ENG+MAT) DESC) AS RANK
            FROM TBL_SCORE
            ORDER BY SID ASC
        )
        WHERE NAME = VNAME;
END;


-- 번호 검색 출력 프로시저(석차 포함)
-- 매개변수의 순서에 주의할 것
CREATE OR REPLACE PROCEDURE PRC_SEARCHSID
(
    P_RESULT OUT SYS_REFCURSOR
    , VSID IN TBL_SCORE.SID%TYPE
)
IS
BEGIN
    OPEN P_RESULT FOR
        SELECT *
        FROM
        (
            SELECT SID, NAME, KOR, ENG, MAT
            , (KOR+ENG+MAT) AS TOT
            , ROUND((KOR+ENG+MAT)/3) AS AVG
            , RANK() OVER (ORDER BY (KOR+ENG+MAT) DESC) AS RANK
            FROM TBL_SCORE
        )
        WHERE SID = VSID;
END;


-- 성적 입력 프로시저
CREATE OR REPLACE PROCEDURE PRC_SCOREINSERT
(
    VNAME IN TBL_SCORE.NAME%TYPE
    , VKOR IN TBL_SCORE.KOR%TYPE
    , VENG IN TBL_SCORE.ENG%TYPE
    , VMAT IN TBL_SCORE.MAT%TYPE
)
IS
BEGIN
    INSERT INTO TBL_SCORE(SID, NAME, KOR, ENG, MAT)
    VALUES(SCORESEQ.NEXTVAL, VNAME, VKOR, VENG, VMAT);
END;


-- 성적 업데이트 프로시저
CREATE OR REPLACE PROCEDURE PRC_SCOREUPDATE
(
    VKOR IN TBL_SCORE.KOR%TYPE
    , VENG IN TBL_SCORE.ENG%TYPE
    , VMAT IN TBL_SCORE.MAT%TYPE
    , VSID IN TBL_SCORE.SID%TYPE
)
IS
BEGIN
    UPDATE TBL_SCORE
    SET KOR=VKOR, ENG=VENG, MAT=VMAT
    WHERE SID=VSID;
END;


-- 성적 삭제 프로시저
CREATE OR REPLACE PROCEDURE PRC_SCOREDELETE
(
    VSID IN TBL_SCORE.SID%TYPE
)
IS
BEGIN
    DELETE
    FROM TBL_SCORE
    WHERE SID=VSID;
END;

--커밋
COMMIT;

variable rc refcursor;
EXECUTE PRC_SCORECOUNTSID(:rc, 7);
print rc;


EXECUTE PRC_SCOREUPDATE(50, 50, 50, 7);